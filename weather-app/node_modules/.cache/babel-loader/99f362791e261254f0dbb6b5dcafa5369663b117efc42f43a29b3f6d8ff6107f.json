{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\Project Codes\\\\Weather\\\\weather-app\\\\src\\\\components\\\\ForecastGraph.jsx\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport './ForecastGraph.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForecastGraph = ({\n  hourlyData\n}) => {\n  if (!hourlyData || hourlyData.length === 0) return null;\n\n  // Format the data for the chart\n  const chartData = hourlyData.slice(0, 24).map(hour => {\n    // Format time for display\n    const time = new Date(hour.datetime).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true\n    });\n    return {\n      time,\n      temperature: Math.round(hour.temp),\n      precipitation: hour.precipProb\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast-graph\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"24-Hour Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: chartData,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          yAxisId: \"left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          yAxisId: \"right\",\n          orientation: \"right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          yAxisId: \"left\",\n          type: \"monotone\",\n          dataKey: \"temperature\",\n          stroke: \"#ff7300\",\n          activeDot: {\n            r: 8\n          },\n          name: \"Temperature (\\xB0C)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          yAxisId: \"right\",\n          type: \"monotone\",\n          dataKey: \"precipitation\",\n          stroke: \"#0088fe\",\n          name: \"Precipitation (%)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = ForecastGraph;\nexport default ForecastGraph;\nvar _c;\n$RefreshReg$(_c, \"ForecastGraph\");","map":{"version":3,"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","ForecastGraph","hourlyData","length","chartData","slice","map","hour","time","Date","datetime","toLocaleTimeString","minute","hour12","temperature","Math","round","temp","precipitation","precipProb","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","data","margin","top","right","left","bottom","strokeDasharray","dataKey","yAxisId","orientation","type","stroke","activeDot","r","name","_c","$RefreshReg$"],"sources":["E:/Documents/Project Codes/Weather/weather-app/src/components/ForecastGraph.jsx"],"sourcesContent":["import React from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport './ForecastGraph.css';\r\n\r\nconst ForecastGraph = ({ hourlyData }) => {\r\n  if (!hourlyData || hourlyData.length === 0) return null;\r\n\r\n  // Format the data for the chart\r\n  const chartData = hourlyData.slice(0, 24).map(hour => {\r\n    // Format time for display\r\n    const time = new Date(hour.datetime).toLocaleTimeString('en-US', {\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      hour12: true\r\n    });\r\n\r\n    return {\r\n      time,\r\n      temperature: Math.round(hour.temp),\r\n      precipitation: hour.precipProb\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"forecast-graph\">\r\n      <h3>24-Hour Forecast</h3>\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <LineChart\r\n          data={chartData}\r\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"time\" />\r\n          <YAxis yAxisId=\"left\" />\r\n          <YAxis yAxisId=\"right\" orientation=\"right\" />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line\r\n            yAxisId=\"left\"\r\n            type=\"monotone\"\r\n            dataKey=\"temperature\"\r\n            stroke=\"#ff7300\"\r\n            activeDot={{ r: 8 }}\r\n            name=\"Temperature (Â°C)\"\r\n          />\r\n          <Line\r\n            yAxisId=\"right\"\r\n            type=\"monotone\"\r\n            dataKey=\"precipitation\"\r\n            stroke=\"#0088fe\"\r\n            name=\"Precipitation (%)\"\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForecastGraph;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}